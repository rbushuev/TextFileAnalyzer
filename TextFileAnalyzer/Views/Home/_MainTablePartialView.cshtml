<table id="mainTable" class="table table-bordered table-hover">
    <thead id="theadInfo"></thead>
    <tbody id="tbodyInfo"></tbody>
</table>

<div class="modal fade" id="modalEditWindow" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Редактирование</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div id="modalEditBody" class="modal-body">

            </div>

            <div class="modal-footer">
                <button class="btn btn-secondary" data-dismiss="modal">Отменить</button>
                <button onclick="modalSaveEditableItem()" class="btn btn-primary" data-dismiss="modal">Сохранить</button>
            </div>

        </div>
    </div>
</div>

<script>
    let tempEditableItem = [];

    async function displayEditForm(index) {
        tempEditableItem = data.table.rows[index].cells;

        let modalEditBody = document.getElementById('modalEditBody');
        modalEditBody.innerHTML = '';

        tempEditableItem.forEach(e => {
            let divFormGroup = document.createElement("div");
            divFormGroup.className = 'form-group';

            modalEditBody.appendChild(divFormGroup);

            let inputEditProperty = document.createElement("input");
            inputEditProperty.className = 'form-control newRow';
            inputEditProperty.value = e;

            divFormGroup.appendChild(inputEditProperty);
        });
    }

    async function modalSaveEditableItem() {
        var allInputEditable = [...document.getElementsByClassName("newRow")];

        let newRow = allInputEditable.map(input => input.value);

        let request = {
            fileSetting: data.fileSetting,
            oldRow: tempEditableItem,
            newRow: newRow
        };

        try {
            let response = await fetch('/api/editfile', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(request)
            });
            data = await response.json();
            _displayTable(data.table.headers, data.table.rows);
        } catch (err) {
            console.error('Ошибка изменения значении ', err);
        }
    }
</script>